### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createReply(caption: String, photoUrl: String, replied_userIds: [String], tweetId: String!): Reply
  createTweet(caption: String, photoUrl: String, tags: [String]): Tweet
  deleteReply(id: String!): Reply
  deleteTweet(id: String!): Tweet
  editProfile(bio: String, birthday: String, coverphotoUrl: String, location: String, profilepictureUrl: String): Profile
  editReply(caption: String, id: String!, photoUrl: String): Reply
  editTweet(caption: String, id: String!, photoUrl: String): Tweet
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, name: String, password: String!): AuthPayload
}

type Profile {
  bio: String
  birthday: String
  coverPhotoUrl: String
  location: String
  profilePictureUrl: String
  user: User
}

type Query {
  allUsers: [User!]!
  feed(searchString: String, skip: Int, take: Int): [Tweet!]!
  me: User
  tweetById(id: String): Tweet
  tweets: [Tweet]
  tweetsByUser(id: String): [Tweet]
}

type Reply {
  author: User
  caption: String
  createdAt: DateTime!
  id: String!
  liked_users: [User]
  photoUrl: String
  replied_users: [User]
  retweet: Retweet
  tweet: Tweet
  updatedAt: DateTime!
}

type Retweet {
  author: User
  caption: String
  createdAt: DateTime!
  id: String!
  liked_users: [User]
  replies: Reply
  tags: [Tag]
  tweet: Tweet
  updatedAt: DateTime!
}

type Tag {
  retweets: [Retweet]
  tagName: String!
  tweets: [Tweet]
}

type Tweet {
  author: User
  caption: String
  createdAt: DateTime!
  id: String!
  liked_users: [User]
  photoUrl: String
  replies: [Reply]
  retweets: [Retweet]
  tags: [Tag]
  updatedAt: DateTime
}

type User {
  email: String!
  followedBy: [User]
  following: [User]
  id: String!
  liked_replies: [Reply]
  liked_retweets: [Retweet]
  liked_tweets: [Tweet]
  name: String
  profile: Profile
  replies: [Reply]
  retweets: [Retweet]
  tweets: [Tweet]
}